#!/usr/bin/env python3.10
# -*- coding: utf-8 -*-
"""
    2023-12-19 Filipp Yamagusi
    –¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –õ–æ—Ç–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤!
    Fil FC –õ–æ—Ç–æ –≥–æ—Å–Ω–æ–º–µ—Ä–æ–≤
    fil_fc_gosnomer_bot
    https://t.me/fil_fc_gosnomer_bot
"""
# —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –º–æ–¥—É–ª–∏
from time import time_ns, localtime, strftime
from sys import getsizeof
import json
# –Ω–∞—à –ª—é–±–∏–º—ã–π –±–æ—Ç Telegram
from telebot import TeleBot
from telebot import types
from telebot.types import Message
# –¢–æ–∫–µ–Ω –∏ –ø—Ä–æ—á–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
import config
# –¢–∞–±–ª–∏—Ü–∞ –∫–æ–¥–æ–≤, —Ä–∞–¥–∏ –∫–æ—Ç–æ—Ä—ã—Ö –≤—Å–µ –º—ã –∑–¥–µ—Å—å —Å–µ–≥–æ–¥–Ω—è —Å–æ–±—Ä–∞–ª–∏—Å—å
from numeri import code_rf, code_black, code_diplomat, code_ino

# –¥–∞–Ω–Ω—ã–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–ª–æ–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ JSON-—Ñ–∞–π–ª–µ
JSON_FILE_USERS = "users.json"


# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö. –°–º—ã—Å–ª —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞
def save_users() -> None:
    """ –ü—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞ utf8 """
    with open(JSON_FILE_USERS, 'w', encoding='utf8') as file_for_json:
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª, –Ω–µ —Ä–∞–∑—Ä–µ—à–∏–≤ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
        json.dump(Users, file_for_json, ensure_ascii=True)


# –ß–∏—Ç–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö. –°–º—ã—Å–ª —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞
def load_users() -> dict:
    """ –ü—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞ utf8 """
    with open(JSON_FILE_USERS, 'r', encoding='utf8') as file_for_json:
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª, –Ω–µ —Ä–∞–∑—Ä–µ—à–∏–≤ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
        return json.load(file_for_json)


Users = load_users()

# –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –¥–ª—è –±–æ—Ç–∞
bot = TeleBot(config.TOKEN)

# –ü—É—Å—Ç–æ–µ –º–µ–Ω—é, –º–æ–∂–µ—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö
markup_empty = types.ReplyKeyboardMarkup(
)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
menu_main = {
    'add': 'üöô –ù–æ–≤—ã–π –Ω–æ–º–µ—Ä!',
    'stat': 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
    'help': '‚ùì –°–ø—Ä–∞–≤–∫–∞',
}
markup_main = types.ReplyKeyboardMarkup(
    row_width=3,
    resize_keyboard=True
)
markup_main.add(* menu_main.values())


# –í—ã–±–æ—Ä —Ç–∏–ø–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞
menu_add = {
    'rf': '–†–µ–≥–∏–æ–Ω—ã\n'
          'üá∑üá∫ –†–§',
    'amr': '–ú–∏–≥–∞–ª–∫–∏\n'
           'üöî –ê–ú–†97',
    'black': '–í–æ–µ–Ω–Ω—ã–µ\n'
             '‚¨õÔ∏è (—á—ë—Ä–Ω—ã–µ)',
    'diplomat': '–î–∏–ø–ª–æ–º–∞—Ç—ã\n'
                'üü• (–∫—Ä–∞—Å–Ω—ã–µ)',
    'int_org': '–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏\n'
               'üü• (–∫—Ä–∞—Å–Ω—ã–µ)',
}
markup_add = types.ReplyKeyboardMarkup(
    row_width=3,
    resize_keyboard=True
)
markup_add.add(* menu_add.values())


# –£—Ç–æ—á–Ω–µ–Ω–∏–µ —Ç–∏–ø–∞ –¥–∏–ø–ª–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞
menu_diplomat = {
    'diplomat_cd1': 'CD 1',
    'diplomat_cd2': 'CD 2',
    'diplomat_d': 'D',
    'diplomat_t': 'T',
}
markup_diplomat = types.ReplyKeyboardMarkup(
    row_width=4,
    resize_keyboard=True
)
markup_diplomat.add(* menu_diplomat.values())


# –£—Ç–æ—á–Ω–µ–Ω–∏–µ —Ç–∏–ø–∞ –Ω–æ–º–µ—Ä–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
menu_int_org = {
    'int_org_cd1': 'CD 1 (–±–æ—Å—Å)',
    'int_org_cd2': 'CD 2 (–∑–∞–º)',
    'int_org_d': 'D (—Å–æ—Ç—Ä—É–¥–Ω–∏–∫)',
    'int_org_t': 'T (—Ç–µ—Ö–ø–µ—Ä—Å–æ–Ω–∞–ª)',
}
markup_int_org = types.ReplyKeyboardMarkup(
    row_width=4,
    resize_keyboard=True
)
markup_int_org.add(* menu_int_org.values())


# –û—Ç–≤–µ—Ç—ã –î–ê –∏ –ù–ï–¢ –∫–Ω–æ–ø–∫–∞–º–∏
menu_yes_no = {
    'yes': '–î–∞, –¥–æ–±–∞–≤–∏—Ç—å!',
    'no': '–ù–µ—Ç, –Ω–µ –Ω–∞–¥–æ',
}
markup_yes_no = types.ReplyKeyboardMarkup(
    row_width=2,
    resize_keyboard=True
)
markup_yes_no.add(* menu_yes_no.values())


# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö
def show_users(show_size: bool = False, show_content: bool = False) -> None:
    """ –ù–µ–º–Ω–æ–≥–æ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ """
    if show_size:
        print(getsizeof(Users) // 1000000, "Mib",
              getsizeof(Users) // 1000, "Kib")
    if show_content:
        print(Users)


# –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–±—â–µ–º —Å–ª–æ–≤–∞—Ä–µ, –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ
def check_user(user_id: str) -> None:
    """ –§—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç """
    # user_id = str(user_id)
    if user_id not in Users:
        Users[user_id] = {}
        Users[user_id]["collection"] = {}
        show_users(show_content=False)


@bot.message_handler(commands=["start"])
def handle_start(message: Message):
    """ –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω """
    user_id = str(message.from_user.id)
    check_user(user_id)
    bot.send_message(
        message.chat.id,
        f"<b>–ü—Ä–∏–≤–µ—Ç, {message.chat.first_name}!</b>\n\n"
        f"–ù–∞ –¥–æ—Ä–æ–≥–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –Ω–æ–º–µ—Ä–∞.\n"
        f"–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∫–∞–∫ –≤ –ª–æ—Ç–æ: –∑–∞–ø–æ–ª–Ω—è—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ —Å —Ä–µ–≥–∏–æ–Ω–∞–º–∏, "
        f"–∫–æ–¥–∞–º–∏ –¥–∏–ø–ª–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –Ω–æ–º–µ—Ä–æ–≤ –∏–ª–∏ –º–∏–≥–∞–ª–æ–∫ –ê–ú–†97.\n\n"
        f"–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∫–∞–∫ –±—ã—Å—Ç—Ä–æ —Ç—ã —Å–º–æ–∂–µ—à—å –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ?\n\n"
        f"<b>–£–≤–∏–¥–µ–ª –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –Ω–æ–º–µ—Ä</b>? –î–∞–≤–∞–π –∑–∞–ø–∏—à–µ–º! /add\n"
        f"–ò–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–∏–º —Ç–≤–æ—é –∏ –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É /stat\n"
        f"–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ —Å–ø—Ä–∞–≤–∫–µ /help",

        parse_mode="HTML",
        reply_markup=markup_main
    )


def perc_to_text(perc: float) -> str:
    """ –ü–æ –Ω–∞–±—Ä–∞–Ω–Ω–æ–º—É –ø—Ä–æ—Ü–µ–Ω—Ç—É (–¥–µ—Å—è—Ç–∫—É –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤) –≤—ã–¥–∞—Ç—å –ø–æ—Ö–≤–∞–ª—É """
    match int(perc):
        case 0:
            return "–¢–≤–æ—è –∫–æ–ª–ª–µ–∫—Ü–∏—è –µ—â—ë –º–∞–ª–∞, –Ω–æ –∏ –†–∏–º –Ω–µ —Å—Ä–∞–∑—É —Å—Ç—Ä–æ–∏–ª—Å—è."
        case 1:
            return "–í —Ç–∞–≤–µ—Ä–Ω–∞—Ö –ø–æ—à–ª–∏ —Å–ª—É—Ö–∏ –æ —Ä–æ—Å—Ç–µ —Ç–≤–æ–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏."
        case 2:
            return "–î–∞, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å - —Ç–≤–æ—ë –≤—Ç–æ—Ä–æ–µ –∏–º—è!"
        case 3:
            return "–ù–∞–¥–µ—é—Å—å, —Ç—ã –Ω–µ —Å–ª–∏—à–∫–æ–º –æ—Ç–≤–ª–µ–∫–∞–µ—à—å—Å—è –æ—Ç –¥–æ—Ä–æ–≥–∏?"
        case 4:
            return "–ï—â—ë —á—É—Ç—å-—á—É—Ç—å –∏ –ø–æ–ª–æ–≤–∏–Ω–∞ –ø–æ–∑–∞–¥–∏!"
        case 5:
            return "–£—Ä–∞! –≠–∫–≤–∞—Ç–æ—Ä –ø—Ä–æ–π–¥–µ–Ω, —Ç–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ –≤–ø–µ—Ä—ë–¥!"
        case 6:
            return "–£–¥–∞—á–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ, –∏ –∫–æ–ª–ª–µ–∫—Ü–∏—è –Ω–µ—É–∫–ª–æ–Ω–Ω–æ —Ä–∞—Å—Ç—ë—Ç."
        case 7:
            return "–°–∫–∞–∂—É –ø–æ —Å–µ–∫—Ä–µ—Ç—É, —É —Ç–µ–±—è –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤."
        case 8:
            return "–¢–æ–ø–æ–≤—ã–µ –±–ª–æ–≥–µ—Ä—ã –º–µ—á—Ç–∞—é—Ç –≤–∑—è—Ç—å –∏–Ω—Ç–µ—Ä–≤—å—é —É —Ç–µ–±—è!"
        case 9:
            return "–≠—Ç–æ –Ω–µ–≤–æ–æ–±—Ä–∞–∑–∏–º–æ! –¢—ã –æ—á–µ–Ω—å –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–π –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä!"


@bot.message_handler(
    content_types=["text"],
    func=lambda message: message.text == menu_main["stat"])
@bot.message_handler(commands=["stat"])
def handle_stat(message: Message):
    """ –°–∞–º–∞—è –ø—Ä–æ—Å—Ç–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞. –ü–æ—Ä–∞ –¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏—Ö –±–æ—Ç–æ–≤ """
    user_id = str(message.from_user.id)
    check_user(user_id)
    rf_you, rf_all = 0, 0
    amr_you, amr_all = 0, 0
    black_you, black_all = 0, 0

    diplomat_cd1_you = 0
    diplomat_cd2_you = 0
    diplomat_d_you = 0
    diplomat_t_you = 0

    for uid in Users:
        you = uid == user_id
        user = Users[uid]
        # print(user)
        # print(user["collection"].keys())

        if "rf" in user["collection"]:
            rf_all += len(user["collection"]["rf"])
            if you:
                rf_you = len(user["collection"]["rf"])

        if "amr" in user["collection"]:
            amr_all += len(user["collection"]["amr"])
            if you:
                amr_you = len(user["collection"]["amr"])

        if "black" in user["collection"]:
            black_all += len(user["collection"]["black"])
            if you:
                black_you = len(user["collection"]["black"])

        if "diplomat_cd1" in user["collection"] and you:
            diplomat_cd1_you = len(user["collection"]["diplomat_cd1"])
        if "diplomat_cd2" in user["collection"] and you:
            diplomat_cd2_you = len(user["collection"]["diplomat_cd2"])
        if "diplomat_d" in user["collection"] and you:
            diplomat_d_you = len(user["collection"]["diplomat_d"])
        if "diplomat_t" in user["collection"] and you:
            diplomat_t_you = len(user["collection"]["diplomat_t"])

    res_rf = 100 * rf_you / len(code_rf)
    res_amr = 100 * amr_you / 999
    res_black = 100 * black_you / len(code_black)

    bot.send_message(
        message.chat.id,
        f"<b>–ù–µ–º–Ω–æ–≥–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:</b>\n\n"
        f"–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{len(Users)}</b>\n\n"
        f"üá∑üá∫ –ó–∞–ø–∏—Å–∞–Ω–æ —Ä–µ–≥–∏–æ–Ω–æ–≤ –†–§:\n"
        f"<b>{rf_all}</b> - —É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Å –ø–æ–≤—Ç–æ—Ä–∞–º–∏)\n"
        f"<b>{rf_you}</b> –∏–∑ <b>{len(code_rf)}</b> - —É —Ç–µ–±—è. "
        f"–≠—Ç–æ {res_rf:.1f}%!\n<i>{perc_to_text(res_rf / 10)}</i>\n\n"
        f"üöî –ù–∞–¥–æ–µ–¥–ª–∏–≤—ã—Ö –º–∏–≥–∞–ª–æ–∫ –ê–ú–†97:\n"
        f"<b>{amr_all}</b> - —É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Å –ø–æ–≤—Ç–æ—Ä–∞–º–∏)\n"
        f"<b>{amr_you}</b> –∏–∑ <b>999</b> - —É —Ç–µ–±—è. "
        f"–≠—Ç–æ {res_amr:2.1f}%!\n<i>{perc_to_text(res_amr / 10)}</i>\n\n"
        f"‚¨õÔ∏è –°–µ–∫—Ä–µ—Ç–Ω—ã—Ö –≤–æ–µ–Ω–Ω—ã—Ö:\n"
        f"<b>{black_all}</b> - —É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Å –ø–æ–≤—Ç–æ—Ä–∞–º–∏)\n"
        f"<b>{black_you}</b> –∏–∑ <b>{len(code_black)}</b> - —É —Ç–µ–±—è. "
        f"–≠—Ç–æ {res_black:.1f}%!\n<i>{perc_to_text(res_black / 10)}</i>\n\n"
        f"üü• –°–∫–æ–ª—å–∫–æ –ø–æ—Å–æ–ª—å—Å–∫–∏—Ö –º–∞—à–∏–Ω —É —Ç–µ–±—è:\n"
        f"- –ø–æ—Å–ª–æ–≤: <b>{diplomat_cd1_you}</b>\n"
        f"- –ø–æ—Å–ª–∏—Ü: <b>{diplomat_cd2_you}</b>\n"
        f"- –¥–∏–ø–ª–æ–º–∞—Ç–æ–≤: <b>{diplomat_d_you}</b>\n"
        f"- —Ç–µ—Ö–Ω–∏–∫–æ–≤: <b>{diplomat_t_you}</b>\n\n"
        f"(–≤ –º–æ–µ–π –±–∞–∑–µ <b>{len(code_diplomat)}</b> —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω)\n\n"
        f"–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å, —Å–ª–µ–¥–∏ –∑–∞ –¥–æ—Ä–æ–≥–æ–π!\n\n"
        f"–û—Å—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ. –ú–æ–∂–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π, "
        f"–Ω–æ –ø–æ—Ä–∞ –¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ.\n",

        parse_mode="HTML",
        reply_markup=markup_main
    )


@bot.message_handler(
    content_types=["text"],
    func=lambda message: message.text == menu_main["help"])
@bot.message_handler(commands=["help"])
def handle_help(message: Message):
    """ –ß—É—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ """
    user_id = str(message.from_user.id)
    check_user(user_id)
    bot.send_message(
        message.chat.id,
        f"<b>–ü—Ä–∏–≤–µ—Ç, {message.chat.first_name}!</b>\n\n"
        f"–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫—Ä–∞—Å–∏–≤—ã–µ –Ω–æ–º–µ—Ä–∞ –º–∞—à–∏–Ω, "
        f"–∫–æ—Ç–æ—Ä—ã–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –Ω–∞ –¥–æ—Ä–æ–≥–µ.\n"
        f"–ü—Ä–æ—Å—Ç–æ —Ä–∞–¥–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞. –ù–∞–ø—Ä–∏–º–µ—Ä, –≤–æ–∑–º–æ–∂–Ω–æ –ª–∏ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –ø–æ—Å–æ–ª—å—Å–∫–∏–µ "
        f"–º–∞—à–∏–Ω—ã –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω (–∫—Ä–∞—Å–Ω—ã–µ –Ω–æ–º–µ—Ä–∞)? –ò–ª–∏ –≤—Å–µ –≤–∏–¥—ã –≤–æ–µ–Ω–Ω—ã—Ö —á—ë—Ä–Ω—ã—Ö "
        f"–Ω–æ–º–µ—Ä–æ–≤? –ò–ª–∏ –≤—Å–µ 999 –Ω–∞–¥–æ–µ–¥–ª–∏–≤—ã—Ö –º–∏–≥–∞–ª–æ–∫ –ê–ú–†97?\n\n"
        f"<b>–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –Ω–æ–º–µ—Ä–∞</b> –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é "
        f"–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /add\n"
        f"–¥–∞–ª–µ–µ —Å–ª–µ–¥—É–π –ø–æ–¥—Å–∫–∞–∑–∫–∞–º.\n\n"
        f"–ù–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ '–Ω–∞ "
        f"—á–µ—Å—Ç–Ω–æ—Å—Ç—å'. –ú–æ–∂–µ—à—å —Å—Ä–∞–∑—É —É–∫–∞–∑–∞—Ç—å –¥–µ—Å—è—Ç–∫–∏ —É–∂–µ –≤—Å—Ç—Ä–µ—á–µ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤.\n\n"
        f"<i>–ö—Å—Ç–∞—Ç–∏, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ —á—Ç–æ–±—ã –ø—Ä–æ—Å—Ç–æ —É–∑–Ω–∞—Ç—å "
        f"–Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–∞ –†–§ –ø–æ –µ–≥–æ –Ω–æ–º–µ—Ä—É. –ò–ª–∏ –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω—ã "
        f"–ø–æ –ø–æ—Å–æ–ª—å—Å–∫–æ–º—É –∫–æ–¥—É.</i>\n\n"
        f"<b>–°–≤–æ—é –∏ –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É</b> —Å–º–æ—Ç—Ä–∏ —Ç—É—Ç: /stat\n\n"
        f"<b>–ü—Ä–æ—á–∏—Ç–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É</b> –µ—â—ë —Ä–∞–∑: /help",

        parse_mode="HTML",
        reply_markup=markup_main
    )


@bot.message_handler(
    content_types=["text"],
    func=lambda message: message.text == menu_main["add"])
@bot.message_handler(commands=["add"])
def handle_add(message: Message):
    """ –†–∞–∑–¥–µ–ª –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –Ω–æ–º–µ—Ä–æ–≤ """
    user_id = str(message.from_user.id)
    check_user(user_id)
    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏ —Ç–∏–ø –Ω–æ–º–µ—Ä–∞, –∞ –ø–æ—Ç–æ–º —É–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏",

        parse_mode="HTML",
        reply_markup=markup_add
    )


# –ü—è—Ç—å –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤ –Ω–æ–º–µ—Ä–æ–≤.
@bot.message_handler(
    content_types=["text"],
    func=lambda message: message.text in menu_add.values())
@bot.message_handler(
    content_types=["text"],
    func=lambda message: message.text in menu_diplomat.values())
@bot.message_handler(
    content_types=["text"],
    func=lambda message: message.text in menu_int_org.values())
def handle_menu(message: Message):
    """ –£ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ —Ä–∞–∑–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –≤–≤–æ–¥–∞ """
    user_id = str(message.from_user.id)
    check_user(user_id)
    action = [k for k, v in menu_add.items() if v == message.text]
    if not action:
        action = [k for k, v in menu_diplomat.items() if v == message.text]
    if not action:
        action = [k for k, v in menu_int_org.items() if v == message.text]
    action = action[0]
    Users[user_id]["action"] = action
    show_users()

    # –í—Å–µ —Ç–∏–ø—ã –Ω–µ–º–Ω–æ–≥–æ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞. –ü–æ—è—Å–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    action_reply_markup = markup_empty
    msg = "act"
    match action:
        case "rf":
            msg = "–£–∫–∞–∂–∏ <b>–∫–æ–¥ —Ä–µ–≥–∏–æ–Ω–∞ –†–§</b>. –ù–∞–ø—Ä–∏–º–µ—Ä, 01, 769, 977:"
        case "amr":
            msg = "–£–∫–∞–∂–∏ *** –∏–∑ –Ω–æ–º–µ—Ä–∞ <b>[A *** MP 97 RUS]</b>:"
        case "black":
            msg = "–£–∫–∞–∂–∏ —Ü–∏—Ñ—Ä—ã —Å–ø—Ä–∞–≤–∞ (–≥–¥–µ —É –æ–±—ã—á–Ω—ã—Ö –º–∞—à–∏–Ω —Ä–µ–≥–∏–æ–Ω):"
        case "diplomat":
            msg, action_reply_markup = \
                (("–£ <b>–¥–∏–ø–ª–æ–º–∞—Ç–æ–≤</b> —á–∏—Å–ª–æ —Å–ª–µ–≤–∞ <b>–Ω–µ –±–æ–ª–µ–µ 200</b>.\n"
                  "–ö–∞–∫–∏–µ –∏–º–µ–Ω–Ω–æ <b>–±—É–∫–≤—ã</b> –≤ –Ω–æ–º–µ—Ä–µ?"),
                 markup_diplomat)
        case "diplomat_cd1":
            msg = ("–í–∞—É! –≠—Ç–æ –∂ –ø–æ—Å–æ–ª!\n"
                   "–£–∫–∞–∂–∏ —Ç—Ä–∏ —Ü–∏—Ñ—Ä—ã –ø–µ—Ä–µ–¥ <b>CD 1</b>:")
        case "diplomat_cd2":
            msg = ("–≠—Ç–æ –∂–µ –ø–æ—Å–ª–∏—Ü–∞. –ò–ª–∏ –ø–æ—Å–ª–∏—Ö–∞. –ò–ª–∏ –ø–æ—Å–æ–ª–∫–∞ :)\n"
                   "–£–∫–∞–∂–∏ —Ç—Ä–∏ —Ü–∏—Ñ—Ä—ã –ø–µ—Ä–µ–¥ <b>CD 2</b>:")
        case "diplomat_d":
            msg = ("–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ—Å–æ–ª—å—Å—Ç–≤–∞\n"
                   "–£–∫–∞–∂–∏ —Ç—Ä–∏ —Ü–∏—Ñ—Ä—ã –ø–µ—Ä–µ–¥ –±—É–∫–≤–æ–π <b>D</b>\n"
                   "(–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –±–æ–ª–µ–µ 200)")
        case "diplomat_t":
            msg = ("–≠—Ç–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç —Ç–µ—Ö–ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –ø–æ—Å–æ–ª—å—Å—Ç–≤–∞\n"
                   "–£–∫–∞–∂–∏ —Ç—Ä–∏ —Ü–∏—Ñ—Ä—ã –ø–µ—Ä–µ–¥ –±—É–∫–≤–æ–π <b>T</b>\n"
                   "(–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –±–æ–ª–µ–µ 200)")
        case "int_org":
            msg, action_reply_markup = \
                (("–£ <b>–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π</b> —á–∏—Å–ª–æ —Å–ª–µ–≤–∞ <b>–Ω–µ –º–µ–Ω–µ–µ 499</b>.\n"
                  "–ö–∞–∫–∏–µ –∏–º–µ–Ω–Ω–æ <b>–±—É–∫–≤—ã</b> –≤ –Ω–æ–º–µ—Ä–µ?"),
                 markup_int_org)
        case "int_org_cd1":
            msg = ("–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏\n"
                   "–£–∫–∞–∂–∏ —Ç—Ä–∏ —Ü–∏—Ñ—Ä—ã –ø–µ—Ä–µ–¥ –±—É–∫–≤–∞–º–∏ <b>CD 1</b>\n"
                   "(–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 499)")
        case "int_org_cd2":
            msg = ("–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è\n"
                   "–£–∫–∞–∂–∏ —Ç—Ä–∏ —Ü–∏—Ñ—Ä—ã –ø–µ—Ä–µ–¥ –±—É–∫–≤–∞–º–∏ <b>CD 2</b>\n"
                   "(–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 499)")
        case "int_org_d":
            msg = ("–≠—Ç–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏\n"
                   "–£–∫–∞–∂–∏ —Ç—Ä–∏ —Ü–∏—Ñ—Ä—ã –ø–µ—Ä–µ–¥ –±—É–∫–≤–æ–π <b>D</b>\n"
                   "(–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 499)")
        case "int_org_t":
            msg = ("–≠—Ç–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç —Ç–µ—Ö–ø–µ—Ä—Å–æ–Ω–∞–ª–∞\n"
                   "–£–∫–∞–∂–∏ —Ç—Ä–∏ —Ü–∏—Ñ—Ä—ã –ø–µ—Ä–µ–¥ –±—É–∫–≤–æ–π <b>T</b>\n"
                   "(–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 499)")

    bot.send_message(
        message.chat.id,
        f"{msg}",

        parse_mode="HTML",
        reply_markup=action_reply_markup
    )


# –ò –≤–æ—Ç –Ω–∞–º –ø—Ä–∏—Å–ª–∞–ª–∏ —á–∏—Å–ª–æ. –†–∞–∑–±–∏—Ä–∞–µ–º, –¥–ª—è –∫–∞–∫–æ–≥–æ –æ–Ω–æ —Ç–∏–ø–∞ (action)
@bot.message_handler(
    content_types=["text"],
    func=lambda message: str(message.text).isdecimal())
def handle_decimal(message: Message):
    """ –ï—Å–ª–∏ –ø—Ä–∏—à–ª–æ —á–∏—Å–ª–æ –∏ –≤—ã–±—Ä–∞–Ω —Ç–∏–ø –Ω–æ–º–µ—Ä–∞ (action) """
    user_id = str(message.from_user.id)
    check_user(user_id)
    if "action" not in Users[user_id] or Users[user_id]["action"] == "":
        bot.send_message(
            message.chat.id,
            "–•–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –Ω–æ–º–µ—Ä? –í—ã–±–µ—Ä–∏ —Ç–∏–ø: /add",

            reply_markup=markup_main,
        )
        return

    action = Users[user_id]["action"]
    markup_decimal = markup_empty

    num = int(message.text)
    if not 0 < num < 1000:
        bot.send_message(
            message.chat.id,
            "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–∞–∫ –Ω–µ –±—ã–≤–∞–µ—Ç! –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑",
        )
        return

    # –†–µ–≥–∏–æ–Ω –†–§ —Å –ª–∏–¥–∏—Ä—É—é—â–∏–º –Ω—É–ª—ë–º –¥–ª—è –æ–¥–Ω–æ–∑–Ω–∞—á–Ω—ã—Ö
    if action == "rf":
        norm_num = str(num).zfill(2)
        if norm_num not in code_rf:
            msg = (f"<b>{norm_num}</b>? –í –º–æ–µ–π –±–∞–∑–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –∫–æ–¥–∞ —Ä–µ–≥–∏–æ–Ω–∞.\n"
                   "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–µ —É–∂–µ —Å–æ–æ–±—â–∏–ª.")
        else:
            Users[user_id]["norm_num"] = norm_num
            msg = (f"üá∑üá∫ <b>{norm_num}</b>: {code_rf[norm_num]}\n"
                   f"–í–∞—É! –î–æ–±–∞–≤–∏—Ç—å –≤ —Ç–≤–æ—é –∫–æ–ª–ª–µ–∫—Ü–∏—é?")
            markup_decimal = markup_yes_no
    # –¢—É—Ç –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä: –æ—Ç 001 –¥–æ 999
    elif action == "amr":
        norm_num = str(num).zfill(3)
        Users[user_id]["norm_num"] = norm_num
        msg = (f"–í–∞—É! <b>[A {norm_num} MP 97 RUS]</b>\n"
               f"–î–æ–±–∞–≤–∏—Ç—å –≤ —Ç–≤–æ—é –∫–æ–ª–ª–µ–∫—Ü–∏—é?")
        markup_decimal = markup_yes_no
    # –¢—É—Ç –æ—á–µ–Ω—å —Ä–≤–∞–Ω—ã–π –Ω–∞–±–æ—Ä. –î–≤—É–∑–Ω–∞—á–Ω—ã–µ —Å –æ–¥–Ω–∏–º –æ–¥–Ω–æ–∑–Ω–∞—á–Ω—ã–º
    elif action == "black":
        norm_num = str(num).zfill(2)
        if norm_num not in code_black:
            msg = (f"<b>{norm_num}</b>? –í –º–æ–µ–π –±–∞–∑–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –∫–æ–¥–∞.\n"
                   "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–µ —É–∂–µ —Å–æ–æ–±—â–∏–ª.")
        else:
            Users[user_id]["norm_num"] = norm_num
            msg = (f"–í–∞—É, –∫–æ–¥ <b>{norm_num}</b>! –î–æ–±–∞–≤–∏—Ç—å –≤ —Ç–≤–æ—é –∫–æ–ª–ª–µ–∫—Ü–∏—é?\n"
                   f"{code_black[norm_num]}")
            markup_decimal = markup_yes_no
    # –ï—Å–ª–∏ –≤–≤–æ–¥—è—Ç –Ω–æ–º–µ—Ä, –Ω–µ —É—Ç–æ—á–Ω–∏–≤ –¥–µ—Ç–∞–ª–∏ –¥–∏–ø–ª–æ–º–∞—Ç–∞
    elif action in ["diplomat"]:
        msg = ("–£ <b>–¥–∏–ø–ª–æ–º–∞—Ç–æ–≤</b> –±—ã–≤–∞–µ—Ç —á–µ—Ç—ã—Ä–µ —Ç–∏–ø–∞ –Ω–æ–º–µ—Ä–æ–≤.\n"
               "–í—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫–æ–π <b>–±—É–∫–≤—ã</b> –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —á–∏—Å–ª–∞")
        markup_decimal = markup_diplomat
    # –ö–æ–¥—ã —Å—Ç—Ä–∞–Ω –æ—Ç 001 –¥–æ 170. –í—Å–µ —á–µ—Ç—ã—Ä–µ —Ç–∏–ø–∞ –ø–æ –æ–¥–Ω–æ–º—É —Å—Ü–µ–Ω–∞—Ä–∏—é
    elif action in ["diplomat_cd1", "diplomat_cd2", "diplomat_d", "diplomat_t"]:
        norm_num = str(num).zfill(3)
        if num > 200:
            msg = f"<b>{norm_num}</b>? –ö–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –±–æ–ª—å—à–µ 200!\n"
        elif norm_num not in code_diplomat:
            msg = (f"<b>{norm_num}</b>? –í –º–æ–µ–π –±–∞–∑–µ –Ω–µ—Ç —ç—Ç–æ–≥–æ –∫–æ–¥–∞.\n"
                   f"–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–µ —É–∂–µ —Å–æ–æ–±—â–∏–ª.")
        else:
            Users[user_id]["norm_num"] = norm_num
            msg = (f"<b>{norm_num} {menu_diplomat[action]}</b>: "
                   f"{code_diplomat[norm_num]}\n"
                   f"–í–∞—É! –î–æ–±–∞–≤–∏—Ç—å –≤ —Ç–≤–æ—é –∫–æ–ª–ª–µ–∫—Ü–∏—é?")
            markup_decimal = markup_yes_no
    #
    # –ï—Å–ª–∏ –≤–≤–æ–¥—è—Ç –Ω–æ–º–µ—Ä, –Ω–µ —É—Ç–æ—á–Ω–∏–≤ –¥–µ—Ç–∞–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    elif action in ["int_org"]:
        msg = ("–£ <b>–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π</b> –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–∏–ø–æ–≤ –Ω–æ–º–µ—Ä–æ–≤.\n"
               "–í—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫–æ–π <b>–±—É–∫–≤—ã</b> –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —á–∏—Å–ª–∞")
        markup_decimal = markup_int_org
    #
    # –ö–æ–¥—ã —Å—Ç—Ä–∞–Ω –æ—Ç 499 –¥–æ 900. –û–±–∞ —Ç–∏–ø–∞ –ø–æ –æ–¥–Ω–æ–º—É —Å—Ü–µ–Ω–∞—Ä–∏—é
    elif action in ["int_org_cd1", "int_org_cd2", "int_org_d", "int_org_t"]:
        norm_num = str(num)
        if num < 499:
            msg = f"<b>{norm_num}</b>? –ö–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω—å—à–µ 499!\n"
        elif norm_num not in code_ino:
            msg = (f"<b>{norm_num}</b>? –í –º–æ–µ–π –±–∞–∑–µ –Ω–µ—Ç —ç—Ç–æ–≥–æ –∫–æ–¥–∞.\n"
                   f"–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–µ —É–∂–µ —Å–æ–æ–±—â–∏–ª.")
        else:
            Users[user_id]["norm_num"] = norm_num
            msg = (f"<b>{norm_num} {menu_int_org[action]}</b>: "
                   f"{code_ino[norm_num]}\n"
                   f"–í–∞—É! –î–æ–±–∞–≤–∏—Ç—å –≤ —Ç–≤–æ—é –∫–æ–ª–ª–µ–∫—Ü–∏—é?")
            markup_decimal = markup_yes_no

    bot.send_message(
        message.chat.id,
        f"{msg}",

        parse_mode="HTML",
        reply_markup=markup_decimal
    )

    show_users()


# –¢–∏–ø –Ω–æ–º–µ—Ä–∞ –≤—ã–±—Ä–∞–ª–∏, —á–∏—Å–ª–æ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—Ä–∏–≤–µ–ª–∏. –ü–æ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å
@bot.message_handler(
    content_types=["text"],
    func=lambda message: message.text == menu_yes_no["yes"])
def handle_yes_to_save(message: Message):
    """ –ï—Å–ª–∏ –ø—Ä–∏—à–ª–æ —á–∏—Å–ª–æ –∏ –≤—ã–±—Ä–∞–Ω —Ç–∏–ø –Ω–æ–º–µ—Ä–∞ (action) """
    user_id = str(message.from_user.id)
    check_user(user_id)
    if "action" not in Users[user_id]:
        bot.send_message(
            message.chat.id,
            "–•–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –Ω–æ–º–µ—Ä? –í—ã–±–µ—Ä–∏ —Ç–∏–ø: /add",

            reply_markup=markup_main,
        )
        return

    if "norm_num" not in Users[user_id]:
        bot.send_message(
            message.chat.id,
            "–ù–µ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë —Ä–∞–∑: /add",
        )
        return

    action = Users[user_id]["action"]
    norm_num = Users[user_id]["norm_num"]

    # –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–æ–ª–ª–µ–∫—Ü–∏—é, –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ
    if "collection" not in Users[user_id]:
        Users[user_id]["collection"] = {}
    if action not in Users[user_id]["collection"]:
        Users[user_id]["collection"][action] = {}
    show_users()

    # –ï—Å–ª–∏ –Ω–µ –±—ã–ª–æ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞ - –¥–æ–±–∞–≤–ª—è–µ–º
    if norm_num not in Users[user_id]["collection"][action]:
        Users[user_id]["collection"][action][norm_num] = {}
        dt = time_ns() // (10 ** 9)
        Users[user_id]["collection"][action][norm_num]["first"] = dt
        Users[user_id]["collection"][action][norm_num]["times"] = 1
        # Users[user_id]["collection"][action][norm_num]["last"] = dt
        msg = "–≠—Ç–æ—Ç –Ω–æ–º–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤–ø–µ—Ä–≤—ã–µ! üåü\n"
    # –ï—Å–ª–∏ –±—ã–ª —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä - –æ–±–Ω–æ–≤–ª—è–µ–º
    else:
        first = Users[user_id]["collection"][action][norm_num]["first"]
        first = strftime("%Y-%m-%d %H:%M", localtime(first))

        times = Users[user_id]["collection"][action][norm_num]["times"]
        Users[user_id]["collection"][action][norm_num]["times"] += 1

        msg = "–≠—Ç–æ—Ç –Ω–æ–º–µ—Ä —É–∂–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω.\n"
        msg += f"–í–ø–µ—Ä–≤—ã–µ: {first}\n"
        if times > 1:
            last = Users[user_id]["collection"][action][norm_num]["last"]
            last = strftime("%Y-%m-%d %H:%M", localtime(last))
            msg += f"–°–∫–æ–ª—å–∫–æ —Ä–∞–∑: {times}\n"
            msg += f"–í –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑: {last}\n"

        dt = time_ns() // (10 ** 9)
        Users[user_id]["collection"][action][norm_num]["last"] = dt

    # –û–±–Ω—É–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏, —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞–ª–∏
    Users[user_id]["action"] = ""
    Users[user_id]["norm_num"] = ""

    bot.send_message(
        message.chat.id,
        f"–ì–æ—Ç–æ–≤–æ! {msg}"
        f"\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –¥–æ—Ä–æ–≥–æ–π üëÄ",

        parse_mode="HTML",
        reply_markup=markup_main
    )

    show_users(show_size=False)
    save_users()


print(strftime("%H:%M:%S"))
print(config.TOKEN)
bot.polling()
